name: Producer-CI
on:
  push:
    branches:
      - main
    paths:
      - '03-producer/**' # Any change in this path, make trigger build action.
      - '.github/workflows/producer-ci.yaml'

env:
  REPO_APP: 'mqtt-producer'
  BUILD_CONTEXT: './03-producer'
  SLACK_CHANNEL: 'builds-and-ci'
  SLACK_MSG_COLOR: '#0092ff'
  COMMITER_NAME: 'AutoCommit'
  VULN_SEVERITY: 'CRITICAL'
  VULN_TYPE: 'os,library'
  VULN_TIMEOUT_SCAN: '2m0s'


jobs:
  Producer-CI_build-docker-image:
    runs-on: ubuntu-latest 
    # Give the default GITHUB_TOKEN write permission to commit and push the changed files back to the repository.
    permissions:
      contents: write  
    
    steps:
     
    - name: Checkout
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2


    - name: Show last version of docker-hub image
      id: last_version_remote_file
      run: |
        LastVersion=$(curl -s "https://hub.docker.com/v2/repositories/jpradoar/${{ env.REPO_APP }}/tags/?page_size=2" | jq -r '.results[].name'|sort -M|grep -v latest|tail -1)
        echo "LAST_VERSION=$LastVersion " >> "$GITHUB_OUTPUT"

    - name: Generate new version with semantic version
      id: nversion
      uses: jpradoar/ga-semanticversion@v1.0.0
      with:
        COMMIT_MSG:  ${{ github.event.head_commit.message }}
        VERSION: ${{ steps.last_version_remote_file.outputs.LAST_VERSION }}


    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: ${{ env.BUILD_CONTEXT }}
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPO_APP }}:${{ steps.nversion.outputs.NEW_VERSION }}


    - name: Run Trivy vulnerability scanner
      id: vulnscan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPO_APP }}:${{ steps.nversion.outputs.NEW_VERSION }}'
        format: ${{ env.VULN_FORMAT }}
        vuln-type: ${{ env.VULN_TYPE }}
        severity: ${{ env.VULN_SEVERITY }}
        timeout: ${{ env.VULN_TIMEOUT_SCAN }}
        output: vuln_scans/${{ env.REPO_APP }}_vuln_scan.sarif     
        #exit-code: '1' 
       
    - uses: EndBug/add-and-commit@v9
      with:
        message: 'AutoCommit: Add ${{ env.REPO_APP }}_vuln_scan'
        add: './vuln_scans/${{ env.REPO_APP }}_vuln_scan.sarif'      

    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: ${{ env.SLACK_CHANNEL }}
        SLACK_COLOR: ${{ env.SLACK_MSG_COLOR }}
        SLACK_MESSAGE: 'URL: https://hub.docker.com/repository/docker/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPO_APP }}'
        SLACK_TITLE: ':rocket: GithubAction Build docker image: [ ${{ env.REPO_APP }}:${{ steps.nversion.outputs.NEW_VERSION }} ]'
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

