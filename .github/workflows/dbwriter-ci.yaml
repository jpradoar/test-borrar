name: DBWriter-CI
on:
  push:
    branches:
      - main
    paths:
      - '05-dbwriter/**' # Any change in this path, make trigger build action.
      - '.github/workflows/dbwriter-ci.yaml'

env:
  REPO_APP: 'mqtt-dbwriter'
  REPO_OWNER: 'jpradoar'
  SLACK_CHANNEL: 'builds-and-ci'
  SLACK_MSG_COLOR: '#0092ff'
  BUILD_CONTEXT: './05-dbwriter'
  VULN_SEVERITY: 'CRITICAL'  
  VULN_TIMEOUT_SCAN: '2m0s'
  VULN_OUTPUT_TYPE: 'table'
  VULN_OUTPUT_FILE: 'mqtt-dbwriter_vuln_scan.txt'
  COMMITER_NAME: 'AutoCommit'

jobs:
  DBWriter-CI_build-docker-image:
    runs-on: ubuntu-latest 
    
    steps:
     
    - name: Checkout
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ env.REPO_OWNER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Show last version of docker-hub image
      id: last_version_remote_file
      run: |
        LastVersion=$(curl -s "https://hub.docker.com/v2/repositories/${{ env.REPO_OWNER }}/${{ env.REPO_APP }}/tags/?page_size=2" | jq -r '.results[].name'|sort -M|grep -v latest|tail -1)
        echo "LAST_VERSION=$LastVersion " >> "$GITHUB_OUTPUT"

    - name: Generate new version with semantic version
      id: nversion
      uses: jpradoar/ga-semanticversion@v1.0.0
      with:
        COMMIT_MSG:  ${{ github.event.head_commit.message }}
        VERSION: ${{ steps.last_version_remote_file.outputs.LAST_VERSION }}

    - name: Show versions
      run: |
        echo "Last old version ${{ steps.last_version_remote_file.outputs.LAST_VERSION }}"
        echo "New version ${{ steps.nversion.outputs.NEW_VERSION }}" 


    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: ${{ env.BUILD_CONTEXT }}
        push: true
        tags: '${{ env.REPO_OWNER }}/${{ env.REPO_APP }}:${{ steps.nversion.outputs.NEW_VERSION }}'
        
    - name: Run Trivy vulnerability scanner
      id: vulnscan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPO_APP }}:${{ steps.nversion.outputs.NEW_VERSION }}'
        format: ${{ env.VULN_FORMAT }}
        vuln-type: 'os,library'
        severity: ${{ env.VULN_SEVERITY }}
        timeout: ${{ env.VULN_TIMEOUT_SCAN }}
        output: vuln_scans/${{ env.VULN_OUTPUT_FILE }}     
        #exit-code: '1' 
    - uses: EndBug/add-and-commit@v9
      with:
        message: 'AutoCommit: Add table file'
        add: ./vuln_scans/${{ env.VULN_OUTPUT_FILE }}
        committer_name: ${{ env.COMMITER_NAME }}              

    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: ${{ env.SLACK_CHANNEL }}
        SLACK_COLOR: ${{ env.SLACK_MSG_COLOR }}
        SLACK_MESSAGE: 'URL: https://hub.docker.com/repository/docker/${{ env.REPO_OWNER }}/${{ env.REPO_APP }}'
        SLACK_TITLE: ':rocket: GithubAction Build docker image: [ ${{ env.REPO_APP }}:${{ steps.nversion.outputs.NEW_VERSION }} ]'
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}














