---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-event-exporter-sa
  annotations:
    eks.amazonaws.com/role-arn: {{ .Values.eventexporter.aws-arn }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-event-exporter-cr
  namespace: default
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["list", "watch"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: k8s-event-exporter-cr-binding
subjects:
- kind: ServiceAccount
  name: k8s-event-exporter-sa
  namespace: default
roleRef:
  kind: ClusterRole
  name: k8s-event-exporter-cr
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-event-exporter
  namespace: default
  labels:
    app: {{ .Release.Name }}-event-exporter
    environment: {{ .Values.environment }}
    app.business.client: {{ .Values.ClientName }}
  annotations:
    prometheus.io/scrape: 'true'
    app.depends: metrics-server
    app.business.client: {{ .Values.ClientName }}
    app.mqtt.event.trigger: {{ .Values.traceID }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-event-exporter
      environment: {{ .Values.environment }}
      app.business.client: {{ .Values.ClientName }}     
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-event-exporter
        environment: {{ .Values.environment }}
        app.business.client: {{ .Values.ClientName }}  
      annotations:
        app.depends: metrics-server
        app.business.client: {{ .Values.ClientName }}
        app.mqtt.event.trigger: {{ .Values.traceID }}      
    spec:
      serviceAccountName: k8s-event-exporter-sa
      containers:
      - name: k8s-event-exporter
          image: {{ .Values.eventexporter.image }}:{{ .Values.eventexporter.tag }}
          imagePullPolicy: {{ .Values.eventexporter.imagePullPolicy }} 
#-----------------------------------------          
        resources:
          requests:
            cpu: 50m
            memory: 50Mi          
          limits:
            cpu: 150m
            memory: 150Mi
#-----------------------------------------            
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true  
          runAsNonRoot: true
          capabilities:
            drop: ["ALL"]
